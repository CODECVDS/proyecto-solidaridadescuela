[main]

dataSource = org.postgresql.ds.PGPoolingDataSource
dataSource.serverName = ec2-18-233-83-165.compute-1.amazonaws.com
dataSource.databaseName = d229tc5m7a350c
dataSource.portNumber = 5432
dataSource.ssl = true
dataSource.sslmode = allow
dataSource.sslfactory = org.postgresql.ssl.NonValidatingFactory
dataSource.user = jetzvwdqpapfis
dataSource.password = f30d7905bfe1b0b343d3fbbdea8ba1ae7c1c5efdbe81a18df3c7aa18ba47b7b5

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $dataSource
jdbcRealm.authenticationQuery = SELECT userpassword FROM users WHERE username = ?
jdbcRealm.userRolesQuery = SELECT name FROM rol WHERE id = (SELECT usertype FROM users WHERE username = ?)

authc.loginUrl = /faces/signin.xhtml

passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.hashIterations=1
credentialsMatcher.storedCredentialsHexEncoded = true

onlynot=edu.eci.cvds.security.OnlyNot
onlynot.welcomeurl=/faces/index.html
anyrole = edu.eci.cvds.security.AnyRole

[urls]
/faces/homeA.xhtml = authc, roles[Administrator]
/faces/categories.xhtml = authc, roles[Administrator]
/faces/homeB.xhtml = anyrole["Student, Teacher, Graduate, Administrative"]
/faces/needs.xhtml = authc
/faces/offers.xhtml = authc
/faces/needs2.xhtml = authc
/faces/offers2.xhtml = authc
/faces/answers.xhtml = authc

/=onlynot
/faces/signin.xhtml=onlynot